package com.wildbitsfoundry.etk4j.signals.fft;

import com.wildbitsfoundry.etk4j.math.complex.Complex;
import com.wildbitsfoundry.etk4j.util.ComplexArrays;
import org.junit.Test;

import java.util.Arrays;

import static org.junit.Assert.assertArrayEquals;

public class FFTTest {

    @Test
    public void testRealAndImaginaryData() {
        double[] real = {0.559677760695923, 0.811961988413724, -0.489763299068234, -0.778067179542341,
                -0.706735964715945, 0.789019721173435, -0.700001555401106, 0.700489895029539, -0.718488129867960,
                0.574342509973089, 0.685516617700664, 0.817398984407037, -0.267529687111015, -0.224422049737993,
                -0.606118364173603, -0.757421636418101, -0.554515146424656, -0.440790757929746, -0.409781781881146,
                0.0141205685354671, 0.280704586278388, -0.452294658802835, -0.681799182902633, 0.864458500245397,
                -0.435253596623234, -0.0249062599816210, 0.177507536424897, 0.918235637008785, 0.659079582021293,
                -0.0474811926324961, -0.285224755579650, 0.863443049844534};

        double[] imag = {-0.627553075609633, 0.546655823856343, -0.946010653090666, 0.243006473934334,
                -0.257873950960501, 0.253985941117167, 0.549619389302165, 0.278368441048426, -0.896404939976776,
                -0.588221017267259, -0.988610592161680, -0.667865653695379, 0.555211953225667, 0.657655783982322,
                -0.248329940445516, 0.462132700569790, 0.937594247545697, 0.863758857076813, 0.381492588056045,
                -0.151998214979134, -0.929646800306250, 0.0416082390322683, -0.215594991256026, -0.976012577178314,
                0.847837107109384, -0.0561434192544805, 0.531367878780680, -0.296828765390418, -0.0170543373258241,
                -0.222993692923477, 0.775753049706212, -0.142807967492327};

        double[] realCopy = Arrays.copyOf(real, real.length);
        double[] imagCopy = Arrays.copyOf(imag, imag.length);

        FFT fft = new FFT(32);
        fft.direct(real, imag);

        double[] fftDirectReal = {0.13536173895785764, 2.8755618330652846, -3.1369170326073323, 4.872263859549912,
                -2.222674201044709, -1.0565322473969783, 6.424608417316371, 2.076843187525435, 3.8749162679363236,
                -1.9917314616983306, -1.0917008186996557, 4.304442174684793, -0.6554551201942223, 0.1579097625843635,
                6.143713989359328, 1.9919464265651081, -7.120812500213891, -5.614397193798754, -0.22088585870417754,
                0.07917626176503711, -3.771937627785498, -6.801066098975428, 0.7183771619209867, -1.4421897878661007,
                -1.6217078896691142, 5.5569874624491185, 2.1824076043946343, 5.868588416010121, 2.1936764342538373,
                1.832874824046079, -1.7483687368804661, 5.116409095419609};
        assertArrayEquals(fftDirectReal, real, 1e-12);

        double[] fftDirectImag = {-0.30390211497034714, -0.963477937129197, 7.382287851266992, -3.1770308050206473,
                -1.0608640447471047, 3.0145802706591778, -0.7618708758744421, -6.1953250784669285, 1.4296519934453102,
                0.030473103069458773, -2.4563354014040852, 0.9128683083481729, 2.6612071091554172, -1.9598106396617871,
                -4.029423835773347, -2.367639556105513, -0.7925040198436968, 1.8373862176654092, -1.7218493390483394,
                -1.2926923583504348, -1.5907088688480813, -2.8556885046439118, 2.9083906484453355, -1.8541819408763027,
                -1.8848050438242105, -0.33683506390249857, 1.5006580017905968, 1.295630808800611, 3.6337117021820884,
                -9.021929765341484, 0.04701498902493784, -2.108684229529405};
        assertArrayEquals(fftDirectImag, imag, 1e-12);

        // Things should go back to where they started
        fft.inverse(real, imag);
        assertArrayEquals(realCopy, real, 1e-12);
        assertArrayEquals(imagCopy, imag, 1e-12);
    }

    @Test
    public void testComplexData() {
        double[] real = {0.559677760695923, 0.811961988413724, -0.489763299068234, -0.778067179542341,
                -0.706735964715945, 0.789019721173435, -0.700001555401106, 0.700489895029539, -0.718488129867960,
                0.574342509973089, 0.685516617700664, 0.817398984407037, -0.267529687111015, -0.224422049737993,
                -0.606118364173603, -0.757421636418101, -0.554515146424656, -0.440790757929746, -0.409781781881146,
                0.0141205685354671, 0.280704586278388, -0.452294658802835, -0.681799182902633, 0.864458500245397,
                -0.435253596623234, -0.0249062599816210, 0.177507536424897, 0.918235637008785, 0.659079582021293,
                -0.0474811926324961, -0.285224755579650, 0.863443049844534};

        double[] imag = {-0.627553075609633, 0.546655823856343, -0.946010653090666, 0.243006473934334,
                -0.257873950960501, 0.253985941117167, 0.549619389302165, 0.278368441048426, -0.896404939976776,
                -0.588221017267259, -0.988610592161680, -0.667865653695379, 0.555211953225667, 0.657655783982322,
                -0.248329940445516, 0.462132700569790, 0.937594247545697, 0.863758857076813, 0.381492588056045,
                -0.151998214979134, -0.929646800306250, 0.0416082390322683, -0.215594991256026, -0.976012577178314,
                0.847837107109384, -0.0561434192544805, 0.531367878780680, -0.296828765390418, -0.0170543373258241,
                -0.222993692923477, 0.775753049706212, -0.142807967492327};

        Complex[] data = ComplexArrays.zip(real, imag);
        FFT fft = new FFT(32);
        fft.direct(data);

        double[] fftDirectReal = {0.13536173895785764, 2.8755618330652846, -3.1369170326073323, 4.872263859549912,
                -2.222674201044709, -1.0565322473969783, 6.424608417316371, 2.076843187525435, 3.8749162679363236,
                -1.9917314616983306, -1.0917008186996557, 4.304442174684793, -0.6554551201942223, 0.1579097625843635,
                6.143713989359328, 1.9919464265651081, -7.120812500213891, -5.614397193798754, -0.22088585870417754,
                0.07917626176503711, -3.771937627785498, -6.801066098975428, 0.7183771619209867, -1.4421897878661007,
                -1.6217078896691142, 5.5569874624491185, 2.1824076043946343, 5.868588416010121, 2.1936764342538373,
                1.832874824046079, -1.7483687368804661, 5.116409095419609};
        assertArrayEquals(fftDirectReal, ComplexArrays.real(data), 1e-12);

        double[] fftDirectImag = {-0.30390211497034714, -0.963477937129197, 7.382287851266992, -3.1770308050206473,
                -1.0608640447471047, 3.0145802706591778, -0.7618708758744421, -6.1953250784669285, 1.4296519934453102,
                0.030473103069458773, -2.4563354014040852, 0.9128683083481729, 2.6612071091554172, -1.9598106396617871,
                -4.029423835773347, -2.367639556105513, -0.7925040198436968, 1.8373862176654092, -1.7218493390483394,
                -1.2926923583504348, -1.5907088688480813, -2.8556885046439118, 2.9083906484453355, -1.8541819408763027,
                -1.8848050438242105, -0.33683506390249857, 1.5006580017905968, 1.295630808800611, 3.6337117021820884,
                -9.021929765341484, 0.04701498902493784, -2.108684229529405};
        assertArrayEquals(fftDirectImag, ComplexArrays.imag(data), 1e-12);

        // Things should go back to where they started
        fft.inverse(data);
        assertArrayEquals(real, ComplexArrays.real(data), 1e-12);
        assertArrayEquals(imag, ComplexArrays.imag(data), 1e-12);
    }
}
